import { Router } from '@angular/router';
import { Component, OnInit } from '@angular/core';
import { AuthenticationService } from 'src/app/services/auth/authentication.service';
import { UserService } from 'src/app/services/user/oop/user.service';
import { MatSnackBar } from '@angular/material/snack-bar';
import * as firebase from 'firebase';

@Component({
  selector: 'app-signup',
  templateUrl: './signup.component.html',
  styleUrls: ['../sb-admin-2.min.css']
})
export class SignupComponent implements OnInit {

  isUserAgree = false;

// allUsers;
  constructor( private users :UserService,private authenticationService:AuthenticationService,private service: UserService,private _snackBar: MatSnackBar,private router: Router) {
    // this.users.getAll().subscribe(users=>{
    //   this.allUsers=users;
    // });
  }

  ngOnInit() {
  }

  email: string;
  //name: string;
  //password:string;
  // isFound:boolean=false;
  // check():boolean{
  //   this.allUsers.forEach(user=>{
  //       //console.log(user)
  //       if(user.email===this.email && user.emailVerified) return this.isFound=true;
  //       else return this.isFound=false;
  //     })
    
  //   return;
  // }
  
  signUp() {
    // console.log(this.check())
    // if( !this.check())

    firebase.auth().fetchSignInMethodsForEmail(this.email).then(methods => {
      if(methods.length>0) {
        this._snackBar.open('Your are Already registered !!!','', { duration: 5000, });
    }
      else this.authenticationService.forgotPassword(this.email);
    }).catch(err=>{
      this._snackBar.open(err,'', { duration: 5000, });
    })
        
    // else this._snackBar.open('Your are Already registered!' ,'', { duration: 5000, });
      
    
  }

  // signIn() {
  //   this.authenticationService.SignIn(this.email, this.password)    
  // }

  signOut() { 
    
    this.authenticationService.SignOut();
  }
  isEmpty(text:string):boolean{
    for(let i=0;i<text.length;i++)
      if(text[i] != " ")
        return false;
    return true;
  }

  privacyRedirect(){
    this.router.navigate(['privacy']);
  }
  termsRedirect(){
    this.router.navigate(['terms-and-conditions']);
  }


}
